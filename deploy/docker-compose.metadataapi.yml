version: '3.4'

x-common-config: &common-env
  TZ: Asia/Taipei

x-gateway-config: &gateway-env
  DomainStorm_Gateway__EndPoint: ${Api_Gateway_EndPoint}
  DomainStorm_OpenIDConnectOptions__Authority: ${OpenIDConnectOptions_Authority}

services:
  elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
   container_name: elasticsearch
   ports:
    - "9200:9200"
    - "9300:9300"
   volumes:
    - type: volume
      source: elasticsearch-volume-data
      target: /usr/share/elasticsearch/data
   environment:
      <<: *common-env
      discovery.type: single-node
   healthcheck:
      test: curl -f localhost:9200  
      interval: 10s
      timeout: 10s
      retries: 50     
   networks:
    - backend
  ############################
  # domainstorm.metadataapi service
  ############################
  domainstorm.metadataapi:
    image: ${DOCKER_REGISTRY-}yanshibainu/metadataapi:${MetadataApi_Version}
    container_name: metadataapi   
    environment:
      <<: [*common-env, *gateway-env]
      ASPNETCORE_URLS: http://+:80
      DomainStorm_SqlDbOptions__ConnectionString: Server=${SQL_Server_EndPoint};Database=MetadataApiEventDb;User Id=${SQL_Server_User_Id};Password=${SQL_Server_Password};    
      DomainStorm_ElasticSearchOptions__ConnectionString: http://elasticsearch:9200       
    # ports:
    #   - "5101:80"
      #- "5201:443"
    depends_on:
      domainstorm.jwtauthapi.openidprovider:
          condition: service_healthy    
      elasticsearch:
          condition: service_healthy
      redis:
          condition: service_healthy
      placement:
          condition: service_started
      kafka:  
          condition: service_healthy  
    # links:
    #   - elasticsearch
    #   - redis
    #   - placement
    restart: on-failure
    healthcheck:       
      test: curl -f http://localhost:80/healthz || exit
      interval: 10s
      timeout: 10s
      retries: 50      
    networks:
      - backend    
  domainstorm.metadataapi-dapr:
    image: "daprio/daprd:1.8.7-mariner"
    environment:
      <<: *common-env    
    command: ["./daprd",
      "-app-id", "MetadataApi",
      "-app-port", "80",
      "-dapr-http-port", "3500",
      "-log-level", "debug",
      "-placement-host-address", "placement:50006",
      "-config", "/.dapr/config.yaml",
      "-components-path", "/.dapr/components",
      "-dapr-http-max-request-size", "200",
      "-dapr-http-read-buffer-size", "100"]
    volumes:
      - "./.dapr/config.yaml:/.dapr/config.yaml"
      - "./.dapr/components/:/.dapr/components"
    depends_on:
      - domainstorm.metadataapi
    restart: on-failure
    network_mode: "service:domainstorm.metadataapi"      
volumes:
  elasticsearch-volume-data:    